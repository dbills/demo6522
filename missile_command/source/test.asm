;
; File generated by cc65 v 2.18 - Ubuntu 2.18-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.18-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_genline
	.import		_p_render
	.importzp	_x1
	.importzp	_x2
	.importzp	_y1
	.importzp	_y2
	.importzp	_lstore
	.export		_INTERCEPTED
	.export		_missiles
	.export		_ldata1
	.importzp	_pl_x
	.importzp	_pl_y
	.import		_plot
	.export		_c_main

.segment	"RODATA"

_INTERCEPTED:
	.byte	$FF

.segment	"BSS"

_missiles:
	.res	930,$00
_ldata1:
	.res	176,$00

; ---------------------------------------------------------------
; void __near__ doom (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_doom: near

.segment	"CODE"

;
; while(1) {
;
	jmp     L0012
;
; *((char*)0x900f) = 255;
;
L0010:	ldx     #$00
	lda     #$FF
	sta     $900F
;
; while(1) {
;
L0012:	jmp     L0010
;
; }
;
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ lineto (unsigned char, unsigned char, unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_lineto: near

.segment	"CODE"

;
; {
;
	jsr     pusha
;
; x1 = ix1;
;
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	sta     _x1
;
; x2 = ix2;
;
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	sta     _x2
;
; y1 = iy1;
;
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	sta     _y1
;
; y2 = iy2;
;
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	sta     _y2
;
; lstore = ldata1;
;
	lda     #<(_ldata1)
	ldx     #>(_ldata1)
	sta     _lstore
	stx     _lstore+1
;
; genline();
;
	ldy     #$00
	jsr     _genline
;
; (*p_render)();
;
	lda     _p_render
	ldx     _p_render+1
	ldy     #$00
	jsr     callax
;
; }
;
	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ lplot (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_lplot: near

.segment	"CODE"

;
; {
;
	jsr     pusha
;
; pl_x = x1;
;
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	sta     _pl_x
;
; pl_y = y1;
;
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	sta     _pl_y
;
; plot();
;
	ldy     #$00
	jsr     _plot
;
; }
;
	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ c_main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_c_main: near

.segment	"CODE"

;
; for(i=0;i<175;i+=6) {
;
	jsr     decsp1
	ldx     #$00
	lda     #$00
	ldy     #$00
	sta     (sp),y
L0057:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	cmp     #$AF
	jsr     boolult
	jne     L005A
	jmp     L0058
;
; lineto(i,0,i,175);
;
L005A:	ldy     #$00
	lda     (sp),y
	jsr     pusha
	lda     #$00
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     pusha
	lda     #$AF
	jsr     _lineto
;
; for(i=0;i<175;i+=6) {
;
	ldy     #$00
	ldx     #$00
	clc
	lda     #$06
	adc     (sp),y
	sta     (sp),y
	jmp     L0057
;
; lplot(175,0);
;
L0058:	lda     #$AF
	jsr     pusha
	lda     #$00
	jsr     _lplot
;
; }
;
	jsr     incsp1
	rts

.endproc

