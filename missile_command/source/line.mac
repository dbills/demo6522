.ifndef _line_h
_line_h=1
.include "screen.mac"
.include  "system.mac"

;;; IN: X = line index to draw
;;;     _lstore = where to store line data
.macro      lineto x1,y1,x2,y2
          savex
.if (.match (.left (1, {x1}), #))
            lda #(.right (.tcount ({x1})-1, {x1}))
.else
            lda x1
.endif
            sta _x1
.if (.match (.left (1, {x2}), #))
            lda #(.right (.tcount ({x2})-1, {x2}))
.else
            lda x2
.endif
            sta _x2

.if (.match (.left (1, {y1}), #))
            lda #(.right (.tcount ({y1})-1, {y1}))
.else
            lda y1
.endif
            sta _y1

.if (.match (.left (1, {y2}), #))
            lda #(.right (.tcount ({y2})-1, {y2}))
.else
            lda y2
.endif
            sta _y2
            jsr _genline
;            jsr _general_render
          resx
.endmacro

.enum linetype
  ltype_shallow_forward
  ltype_shallow_reverse
  ltype_steep_forward
  ltype_steep_reverse
.endenum
.define MAX_LINES 2

.macro    next_line line_pointer, line_index
          inc line_index
          lda line_pointer
          clc
          adc #LINEMAX
          sta line_pointer
          bcc @done
          inc line_pointer+1
@done:
.endmacro

.endif
