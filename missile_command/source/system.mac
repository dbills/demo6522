.ifndef _SYSTEM_H
_SYSTEM_H = 1
VICRASTER   = $9004
VICSCRN     = $9005             ; vic chip character generator pointer
LIGHPENX    = $9006             ; used for random number
VIA1DDR     = $9113
VIA2DDR     = $9122             ; ?
JIFFYL      = $a2
DEFISR      = $eabf             ; os default IRQ
MINISR      = $eb15             ; the minimum isr ( no keyboard polling o
;;; some frequency constants
;;; 1MHz = 1/1,000,000s
;;; x = 1e06/120 => x = 8333 cycles
HZ800       = $4e2
HZ300       = $d05
HZ200       = $1388
HZ400       = $9c4
HZ120       = $208d           ; 1/120th
HZ30        = $8235           ; 1/30th
HZ60        = $411A           ; 1/60th
HZ16        = $f424           ; 1/16th

.macro      savey
            tya
            pha
.endmacro
.macro      resy
            pla
            tay
.endmacro
.macro      savex
            txa
            pha
.endmacro
.macro      resx
            pla
            tax
.endmacro
.macro      savexy
            txa
            pha
            tya
            pha
.endmacro
.macro      resxy
            pla
            tay
            pla
            tax
.endmacro
.macro      saveall
            pha
            txa
            pha
            tya
            pha
.endmacro

.macro      resall
            pla
            tay
            pla
            tax
            pla
.endmacro
.macro      push _1
            lda _1
            pha
.endmacro
.macro      init_varg
VARG .set $103
.endmacro
.macro      popw_varg ptr
            lda VARG,x
            sta ptr+1
            lda VARG+1,x
            sta ptr
VARG .set VARG + 2
.endmacro
.macro      pushw ptr
            ;; push address
            .if (.match (.left (1, {ptr}), #))
            lda #<(.right (.tcount ({ptr})-1, {ptr}))
            pha
            lda #>(.right (.tcount ({ptr})-1, {ptr}))
            pha
            .else
            ;; push word
            lda ptr
            pha
            lda ptr+1
            pha
            .endif
.endmacro
.macro      popw ptr
            pla
            sta ptr
            pla
            sta ptr+1
.endmacro
.macro      waitv
            .local iloop
iloop:
            lda VICRASTER           ;load raster line
            bne iloop
.endmacro
.macro sleep t
          saveall
          ldx #t
          jsr _sleep
          resall
.endmacro
.endif
