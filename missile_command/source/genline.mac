.include "screen.mac"
.enum render_class
  steep_forward = 0
  steep_reverse
  shallow_forward
  shallow_reverse
.endenum
;;; direction control how we draw the long
;;; axis
;;; slope controls what the long axis is
;;; short = dx, steep = dy
.macro generate_line_data xdirection, ydirection, slope
.local loop
.if (.match ({direction}, forward))
  .define iterator inx
  .define x_start _x1
  .define y_start _y1
  render_selector_bit0 = 0
.else
  .define iterator dex
  .define x_start _x2
  .define y_start _y2
  render_selector_bit0 = 1
.endif            
.if (.match ({slope}, steep))
  .define long_axis _dy
  .define short_axis _dx
  .define short_axis_start_value x_start
  render_selector_bit1 = 0
.else
  .define long_axis _dx 
  .define short_axis _dy     
  .define short_axis_start_value y_start      
  render_selector_bit1 = 1
.endif            
            ldy #.sizeof(line_buffer)
            lda #(render_selector_bit1 *2) + render_selector_bit0
            sta(_lstore),y
            iny
            lda short_axis_start_value
            sta(_lstore),y
            iny
            tax
            lda long_axis
            sta(_lstore),y
            tay
            ldy long_axis               
loop:                                   ;do {
            step_short_axis short_axis, long_axis, iterator
            txa
            sta (_lstore),y             ;lstore[y]=short_axis
            dey
            bne loop                    ;} while(y>0)

            ;determine_render_routine (render_selector_bit1*2) + render_selector_bit0
            rts
.endmacro
            
